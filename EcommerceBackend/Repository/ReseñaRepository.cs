using EcommerceBackend.Data;
using EcommerceBackend.Models;
using Microsoft.EntityFrameworkCore;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace EcommerceBackend.Repositories
{
    public class Rese침aRepository : IRese침aRepository
    {
        private readonly EcommerceDbContext _context;

        public Rese침aRepository(EcommerceDbContext context)
        {
            _context = context;
        }

        public async Task<List<Rese침a>> GetByProductoIdAsync(int productoId)
        {
            return await _context.Rese침as
                .Where(r => r.ProductoId == productoId)
                .Include(r => r.Usuario) // Incluir usuario para mostrar su nombre
                .ToListAsync();
        }

        public async Task<double> GetPromedioCalificacionAsync(int productoId)
        {
            var calificaciones = await _context.Rese침as
                .Where(r => r.ProductoId == productoId)
                .Select(r => (double)r.Calificacion)
                .ToListAsync(); // 游녣 Se obtiene la lista primero

            if (calificaciones.Count == 0)
            {
                return 0; // Si no hay calificaciones, devolvemos 0 en lugar de llamar a AverageAsync()
            }

            return calificaciones.Average(); // 游녣 Se calcula el promedio de forma segura
        }



        public async Task AddAsync(Rese침a rese침a)
        {
            _context.Rese침as.Add(rese침a);
            await _context.SaveChangesAsync();
        }

        public async Task DeleteAsync(int id)
        {
            var rese침a = await _context.Rese침as.FindAsync(id);
            if (rese침a != null)
            {
                _context.Rese침as.Remove(rese침a);
                await _context.SaveChangesAsync();
            }
        }
    }
}
